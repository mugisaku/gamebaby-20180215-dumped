**C言語の型システムをC++で実装する試みと、そのメモ**




型種(整数型とか、ポインタ型とか)と、
それに付随するパラメーター(整数型ならバイト長、配列型なら要素数)から導き出される
文字列を連結させて、それをその型固有のIDとして、型識別に利用する

struct,unionは、そのメンバーをユーザーが定義するが、
これは上記にあるパラメーターには含まれない。つまり、
  A. struct{int  a;         };
  B. struct{int  a;  int  b;};
AとBは、メンバーの定義が異なるが、生成するIDは同一である、
  C.          struct{int  a;};
  D. volatile struct{int  a;};
CとDは、メンバーの定義は同じだが、
Dにはvolatileが付いて(、volatile型へ派生して)いるため、
生成するIDは異なる


C言語では、const,volatileは型修飾子と呼ばれているので、
当初は、これらは型に付加されるフラグのようなものと考えたが、
どうやら、そうではなく、このふたつは共に型種である。つまり、
  A.        int*
  B.  const int
Aがint型を指すポインタ型であるのと同じように、
Bはint型を指すconst型である。また、
  C. const volatile int
Cはint型を指すvolatile型を指すconst型ではなく、
int型を指すconst volatile型である。const volatileが、ひとつの型種である




